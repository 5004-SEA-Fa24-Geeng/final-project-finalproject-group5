{"ast":null,"code":"var _jsxFileName = \"/Users/jing/Documents/movie-feaster/frontend/src/pages/MovieListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MovieCard from '../components/MovieCard';\nimport './MovieListPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieListPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({});\n  useEffect(() => {\n    // Check if we have search results from navigation state\n    if (location.state && location.state.searchResults) {\n      setMovies(location.state.searchResults);\n      setLoading(false);\n      return;\n    }\n\n    // Parse query parameters from URL\n    const queryParams = new URLSearchParams(location.search);\n    const filterParams = {};\n    queryParams.forEach((value, key) => {\n      filterParams[key] = value;\n    });\n    setFilters(filterParams);\n\n    // Fetch movies based on filters\n    fetchMovies(filterParams);\n  }, [location.search, location.state]);\n  const fetchMovies = async filterParams => {\n    try {\n      setLoading(true);\n\n      // Build API URL with query parameters\n      const apiUrl = new URL('http://localhost:3000/api/movies/search');\n      Object.entries(filterParams).forEach(([key, value]) => {\n        if (value) {\n          apiUrl.searchParams.append(key, value);\n        }\n      });\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`);\n  };\n\n  // Function to get the display name for filter keys\n  const getFilterDisplayName = key => {\n    const displayNames = {\n      title: 'Title',\n      director: 'Director',\n      cast: 'Cast',\n      year: 'Year',\n      genre: 'Genre'\n    };\n    return displayNames[key] || key;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-summary\",\n        children: Object.entries(filters).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-tag\",\n          children: [getFilterDisplayName(key), \": \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-count\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Found \", movies.length, \" movies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), movies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No movies found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try adjusting your search criteria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-grid\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie,\n          onClick: () => handleMovieClick(movie.id)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieListPage, \"Ccvzbjc6IdgC97v73b/qWh/t+5I=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = MovieListPage;\nexport default MovieListPage;\nvar _c;\n$RefreshReg$(_c, \"MovieListPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","MovieCard","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieListPage","_s","location","navigate","movies","setMovies","loading","setLoading","error","setError","filters","setFilters","state","searchResults","queryParams","URLSearchParams","search","filterParams","forEach","value","key","fetchMovies","apiUrl","URL","Object","entries","searchParams","append","response","fetch","ok","Error","data","json","err","message","handleMovieClick","movieId","getFilterDisplayName","displayNames","title","director","cast","year","genre","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","length","movie","onClick","id","_c","$RefreshReg$"],"sources":["/Users/jing/Documents/movie-feaster/frontend/src/pages/MovieListPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MovieCard from '../components/MovieCard';\nimport './MovieListPage.css';\n\nconst MovieListPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filters, setFilters] = useState({});\n\n    useEffect(() => {\n        // Check if we have search results from navigation state\n        if (location.state && location.state.searchResults) {\n            setMovies(location.state.searchResults);\n            setLoading(false);\n            return;\n        }\n\n        // Parse query parameters from URL\n        const queryParams = new URLSearchParams(location.search);\n        const filterParams = {};\n\n        queryParams.forEach((value, key) => {\n            filterParams[key] = value;\n        });\n\n        setFilters(filterParams);\n\n        // Fetch movies based on filters\n        fetchMovies(filterParams);\n    }, [location.search, location.state]);\n\n    const fetchMovies = async (filterParams) => {\n        try {\n            setLoading(true);\n\n            // Build API URL with query parameters\n            const apiUrl = new URL('http://localhost:3000/api/movies/search');\n            Object.entries(filterParams).forEach(([key, value]) => {\n                if (value) {\n                    apiUrl.searchParams.append(key, value);\n                }\n            });\n\n            const response = await fetch(apiUrl);\n            if (!response.ok) {\n                throw new Error('Failed to fetch movies');\n            }\n\n            const data = await response.json();\n            setMovies(data);\n            setLoading(false);\n        } catch (err) {\n            setError(err.message);\n            setLoading(false);\n        }\n    };\n\n    const handleMovieClick = (movieId) => {\n        navigate(`/movies/${movieId}`);\n    };\n\n    // Function to get the display name for filter keys\n    const getFilterDisplayName = (key) => {\n        const displayNames = {\n            title: 'Title',\n            director: 'Director',\n            cast: 'Cast',\n            year: 'Year',\n            genre: 'Genre'\n        };\n        return displayNames[key] || key;\n    };\n\n    return (\n        <div className=\"movie-list-page\">\n            <div className=\"list-header\">\n                <h1>Movie Results</h1>\n                <div className=\"filter-summary\">\n                    {Object.entries(filters).map(([key, value]) => (\n                        value && <span key={key} className=\"filter-tag\">\n                            {getFilterDisplayName(key)}: {value}\n                        </span>\n                    ))}\n                </div>\n            </div>\n\n            {error && <div className=\"error-message\">{error}</div>}\n\n            {loading ? (\n                <div className=\"loading-container\">\n                    <div className=\"loading-spinner\"></div>\n                    <p>Loading movies...</p>\n                </div>\n            ) : (\n                <>\n                    <div className=\"results-count\">\n                        <p>Found {movies.length} movies</p>\n                    </div>\n\n                    {movies.length === 0 ? (\n                        <div className=\"no-results\">\n                            <h2>No movies found</h2>\n                            <p>Try adjusting your search criteria</p>\n                        </div>\n                    ) : (\n                        <div className=\"movie-grid\">\n                            {movies.map(movie => (\n                                <MovieCard\n                                    key={movie.id}\n                                    movie={movie}\n                                    onClick={() => handleMovieClick(movie.id)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default MovieListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}