{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import MovieList from'./components/MovieList';import MovieForm from'./components/MovieForm';import SearchBar from'./components/SearchBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[movies,setMovies]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedMovie,setSelectedMovie]=useState(null);const[isEditing,setIsEditing]=useState(false);const API_URL='http://localhost:8080/api/movies';// Fetch all movies\nconst fetchMovies=async()=>{try{setLoading(true);const response=await fetch(API_URL);if(!response.ok){throw new Error('Failed to fetch movies');}const data=await response.json();setMovies(data);setLoading(false);}catch(err){setError(err.message);setLoading(false);}};// Fetch movies when component mounts\nuseEffect(()=>{fetchMovies();},[]);// Search movies by title\nconst searchMovies=async title=>{try{setLoading(true);const response=await fetch(`${API_URL}/search?title=${encodeURIComponent(title)}`);if(!response.ok){throw new Error('Failed to search movies');}const data=await response.json();setMovies(data);setLoading(false);}catch(err){setError(err.message);setLoading(false);}};// Add a new movie\nconst addMovie=async movie=>{try{const response=await fetch(API_URL,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(movie)});if(!response.ok){throw new Error('Failed to add movie');}fetchMovies();// Refresh movie list\nsetIsEditing(false);}catch(err){setError(err.message);}};// Update an existing movie\nconst updateMovie=async(id,movie)=>{try{const response=await fetch(`${API_URL}/${id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(movie)});if(!response.ok){throw new Error('Failed to update movie');}fetchMovies();// Refresh movie list\nsetSelectedMovie(null);setIsEditing(false);}catch(err){setError(err.message);}};// Delete a movie\nconst deleteMovie=async id=>{if(window.confirm('Are you sure you want to delete this movie?')){try{const response=await fetch(`${API_URL}/${id}`,{method:'DELETE'});if(!response.ok){throw new Error('Failed to delete movie');}fetchMovies();// Refresh movie list\n}catch(err){setError(err.message);}}};// Handle edit button click\nconst handleEdit=movie=>{setSelectedMovie(movie);setIsEditing(true);};// Cancel editing\nconst handleCancel=()=>{setSelectedMovie(null);setIsEditing(false);};// Save movie (add or update)\nconst handleSave=movie=>{if(selectedMovie){updateMovie(selectedMovie.id,movie);}else{addMovie(movie);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Movie Feast\"})}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:searchMovies}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-content\",children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"movie-list-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Movie List\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading movies...\"}):/*#__PURE__*/_jsx(MovieList,{movies:movies,onEdit:handleEdit,onDelete:deleteMovie})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedMovie?'Edit Movie':'Add New Movie'}),/*#__PURE__*/_jsx(MovieForm,{movie:selectedMovie,onSave:handleSave,onCancel:handleCancel})]})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","MovieList","MovieForm","SearchBar","jsx","_jsx","jsxs","_jsxs","App","movies","setMovies","loading","setLoading","error","setError","selectedMovie","setSelectedMovie","isEditing","setIsEditing","API_URL","fetchMovies","response","fetch","ok","Error","data","json","err","message","searchMovies","title","encodeURIComponent","addMovie","movie","method","headers","body","JSON","stringify","updateMovie","id","deleteMovie","window","confirm","handleEdit","handleCancel","handleSave","className","children","onSearch","onEdit","onDelete","onSave","onCancel"],"sources":["/Users/jing/Documents/test/movie-feaster/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieForm from './components/MovieForm';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);\n\n    const API_URL = 'http://localhost:8080/api/movies';\n\n    // Fetch all movies\n    const fetchMovies = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch(API_URL);\n            if (!response.ok) {\n                throw new Error('Failed to fetch movies');\n            }\n            const data = await response.json();\n            setMovies(data);\n            setLoading(false);\n        } catch (err) {\n            setError(err.message);\n            setLoading(false);\n        }\n    };\n\n    // Fetch movies when component mounts\n    useEffect(() => {\n        fetchMovies();\n    }, []);\n\n    // Search movies by title\n    const searchMovies = async (title) => {\n        try {\n            setLoading(true);\n            const response = await fetch(`${API_URL}/search?title=${encodeURIComponent(title)}`);\n            if (!response.ok) {\n                throw new Error('Failed to search movies');\n            }\n            const data = await response.json();\n            setMovies(data);\n            setLoading(false);\n        } catch (err) {\n            setError(err.message);\n            setLoading(false);\n        }\n    };\n\n    // Add a new movie\n    const addMovie = async (movie) => {\n        try {\n            const response = await fetch(API_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(movie),\n            });\n            if (!response.ok) {\n                throw new Error('Failed to add movie');\n            }\n            fetchMovies(); // Refresh movie list\n            setIsEditing(false);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    // Update an existing movie\n    const updateMovie = async (id, movie) => {\n        try {\n            const response = await fetch(`${API_URL}/${id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(movie),\n            });\n            if (!response.ok) {\n                throw new Error('Failed to update movie');\n            }\n            fetchMovies(); // Refresh movie list\n            setSelectedMovie(null);\n            setIsEditing(false);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    // Delete a movie\n    const deleteMovie = async (id) => {\n        if (window.confirm('Are you sure you want to delete this movie?')) {\n            try {\n                const response = await fetch(`${API_URL}/${id}`, {\n                    method: 'DELETE',\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to delete movie');\n                }\n                fetchMovies(); // Refresh movie list\n            } catch (err) {\n                setError(err.message);\n            }\n        }\n    };\n\n    // Handle edit button click\n    const handleEdit = (movie) => {\n        setSelectedMovie(movie);\n        setIsEditing(true);\n    };\n\n    // Cancel editing\n    const handleCancel = () => {\n        setSelectedMovie(null);\n        setIsEditing(false);\n    };\n\n    // Save movie (add or update)\n    const handleSave = (movie) => {\n        if (selectedMovie) {\n            updateMovie(selectedMovie.id, movie);\n        } else {\n            addMovie(movie);\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <header className=\"app-header\">\n                <h1>Movie Feast</h1>\n            </header>\n            <main className=\"app-main\">\n                <SearchBar onSearch={searchMovies} />\n\n                <div className=\"app-content\">\n                    {error && <div className=\"error-message\">{error}</div>}\n\n                    <div className=\"movie-section\">\n                        <div className=\"movie-list-container\">\n                            <h2>Movie List</h2>\n                            {loading ? (\n                                <p>Loading movies...</p>\n                            ) : (\n                                <MovieList\n                                    movies={movies}\n                                    onEdit={handleEdit}\n                                    onDelete={deleteMovie}\n                                />\n                            )}\n                        </div>\n\n                        <div className=\"movie-form-container\">\n                            <h2>{selectedMovie ? 'Edit Movie' : 'Add New Movie'}</h2>\n                            <MovieForm\n                                movie={selectedMovie}\n                                onSave={handleSave}\n                                onCancel={handleCancel}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}